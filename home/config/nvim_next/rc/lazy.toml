[[plugins]]
repo = 'rcarriga/nvim-notify'
on_lua = 'notify'
on_event = ['BufRead','CursorHold']
lua_source = '''
require('notify').setup({
  render = "minimal",
  stages = "static",
  timeout = 1000,
})
vim.notify = require('notify')
'''

[[plugins]]
repo = 'j-hui/fidget.nvim'
on_ft = ['rust', 'kotlin']
lua_source = '''
  require('fidget').setup()
'''

[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
on_event = 'VimEnter'
lua_source = '''
  local gitsigns = require('gitsigns')
  gitsigns.setup {
    signcolumn = true,
    numhl = true,
  }
  vim.keymap.set('n', '<C-g><C-q>', gitsigns.setqflist)
'''

[[plugins]]
repo = 'folke/which-key.nvim'
on_event = ['VimEnter', 'BufRead']
lua_source = '''
  vim.o.timeout = true
  vim.o.timeoutlen = 300
  require('which-key').setup {
    plugins = {
      marks = false,
      registers = false,
    }
  }
'''

[[plugins]]
repo = 'github/copilot.vim'
on_cmd = 'Copilot'
hook_source = '''
  let g:copilot_no_map = v:true
  let g:copilot_no_tab_map = v:true
  let g:copilot_hide_during_completion = 0
  imap <silent><expr> <C-g> copilot#Accept()
  imap <silent><expr> <C-n> copilot#Next()
  imap <silent><expr> <C-p> copilot#Previous()
  let g:copilot_filetypes = #{
    \   ddu-ff-filter: v:false,
    \   gitcommit: v:true,
    \   markdown: v:true,
    \   text: v:true,
    \   typescript: v:true,
    \   typescriptreact: v:true,
    \   rust: v:true,
    \   vim: v:true,
    \   yaml: v:true,
    \ }
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
on_event = ['BufRead', 'CursorHold']
hook_post_update = 'TSUpdate'
lua_source = '''
require('nvim-treesitter.configs').setup {
  ensure_installed = {'yaml', 'json', 'toml', 'markdown'},
  highlight = {
    enable = true,
    additional_vim_regex_highlighting = {'markdown'},
  },
}
'''

[[plugins]]
repo       = 'williamboman/mason-lspconfig.nvim'
depends    = 'ddc.vim'
on_event = 'FileType'
hooks_file = '$BASE_DIR/plugins/mason-lspconfig.lua'
[[plugins]]
repo = 'williamboman/mason.nvim'
depends = 'nvim-lspconfig'
on_source  = 'mason-lspconfig.nvim'
[[plugins]]
repo       = 'neovim/nvim-lspconfig'
hooks_file = "$BASE_DIR/plugins/nvim-lspconfig.lua"
lua_source = '''
  vim.notify("load nvim-lspconfig")
'''
[[plugins]]
repo      = 'b0o/SchemaStore.nvim'
on_source = 'mason-lspconfig.nvim'
#[[plugins]]
#repo = 'uga-rosa/ddc-nvim-lsp-setup'
##on_source = 'mason-lspconfig.nvim'
#depends = ['mason-lspconfig.nvim']

#on_source = 'ddc-source-nvim-lsp'
#lua_source = '''
#require("ddc_nvim_lsp_setup").setup()
#require("lspconfig").volar.setup()
#'''

# Lisp
[[plugins]]
repo = 'liquidz/elin'
on_ft = 'clojure'
# [[plugins]]
# repo = 'liquidz/vim-iced'
# on_ft = 'clojure'
# hook_source = '''
# let g:iced_enable_default_key_mappings = v:true
# '''
[[plugins]]
repo  = 'guns/vim-sexp'
on_ft = 'clojure'
[[plugins]]
repo = 'luochen1990/rainbow'
on_ft = 'clojure'
hook_add = '''
let g:rainbow_active = 1
'''
